package io.aime.mvc.view;

// AIME
import io.aime.mvc.controller.MainController;
import io.aime.mvc.model.IndexServerListingTableModel;
import io.aime.mvc.model.SegmentServerListingTableModel;
import io.aime.util.LookFeel;

// AWT
import java.awt.Color;
import java.awt.Component;

// Beans
import java.beans.PropertyChangeEvent;

// Swing
import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.TableCellRenderer;

public class KernelListingViewPanel extends AbstractViewPanel {

    private MainController controller;
    private IndexServerListingTableModel model1;
    private SegmentServerListingTableModel model2;

    public KernelListingViewPanel(MainController controller) {
        this.controller = controller;
        model1 = (IndexServerListingTableModel) controller.getTableModel(MainController.INDEX_SERVER_LISTING_TABLE_MODEL);
        model2 = (SegmentServerListingTableModel) controller.getTableModel(MainController.SEGMENT_SERVER_LISTING_TABLE_MODEL);
        initComponents();
        indexServersTable.setModel(model1);
        indexServersTable.setDefaultRenderer(JLabel.class, new TableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                JLabel label = new JLabel();
                label.setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));
                label.setText(value.toString());
                label.setHorizontalAlignment(SwingConstants.CENTER);

                if (column == model1.STATE_COLUMN_ID) {
                    label.setOpaque(true);
                    if (value.toString().equalsIgnoreCase("idle")) {
                        label.setBackground(Color.YELLOW);
                        label.setForeground(Color.BLACK);
                    }
                    else {
                        label.setBackground(Color.GREEN);
                        label.setForeground(Color.BLACK);
                    }
                }

                return label;
            }
        });
        segmentServersTable.setModel(model2);
        segmentServersTable.setDefaultRenderer(JLabel.class, new TableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                JLabel label = new JLabel();
                label.setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));
                label.setText(value.toString());
                label.setHorizontalAlignment(SwingConstants.CENTER);

                if (column == model2.STATE_COLUMN_ID) {
                    label.setOpaque(true);
                    if (value.toString().equalsIgnoreCase("idle")) {
                        label.setBackground(Color.YELLOW);
                        label.setForeground(Color.BLACK);
                    }
                    else {
                        label.setBackground(Color.GREEN);
                        label.setForeground(Color.BLACK);
                    }
                }

                return label;
            }
        });
    }

    @Override
    public void modelPropertyChange(PropertyChangeEvent evt) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        serversTabbedPane = new JTabbedPane();
        indexServersScrollPane = new JScrollPane();
        indexServersTable = new JTable();
        segmentServersScrollPane = new JScrollPane();
        segmentServersTable = new JTable();

        setName("Form"); // NOI18N
        setLayout(new BoxLayout(this, BoxLayout.LINE_AXIS));

        serversTabbedPane.setFont(LookFeel.getFont (true, 1));
        serversTabbedPane.setName("serversTabbedPane"); // NOI18N

        indexServersScrollPane.setName("indexServersScrollPane"); // NOI18N

        indexServersTable.setName("indexServersTable"); // NOI18N
        indexServersScrollPane.setViewportView(indexServersTable);

        serversTabbedPane.addTab("IndexServers", indexServersScrollPane);

        segmentServersScrollPane.setName("segmentServersScrollPane"); // NOI18N

        segmentServersTable.setName("segmentServersTable"); // NOI18N
        segmentServersScrollPane.setViewportView(segmentServersTable);

        serversTabbedPane.addTab("SegmentServers", segmentServersScrollPane);

        add(serversTabbedPane);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public JScrollPane indexServersScrollPane;
    public JTable indexServersTable;
    public JScrollPane segmentServersScrollPane;
    public JTable segmentServersTable;
    public JTabbedPane serversTabbedPane;
    // End of variables declaration//GEN-END:variables
}
