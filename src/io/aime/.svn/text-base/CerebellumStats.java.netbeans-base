package io.aime;

// --- AIME
import io.aime.renderers.CustomTableRenderer;

// --- AWT
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

// --- Log4J
import org.apache.log4j.Logger;

// --- Swing
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

// --- Util
import java.util.Iterator;
import java.util.Map;

class CerebellumStats extends JFrame {

  private static final Logger LOG = Logger.getLogger (CerebellumStats.class.getName ());
  private static final int UPDATE_INTERVAL = 10000;
  private static CerebellumStats thisFrame;
  private UpdateStatsTable updater;
  private io.aime.stats.CerebellumStats model = new io.aime.stats.CerebellumStats ();
  private Initiator initiator = new Initiator ();
  private Utilities utilities;

  private CerebellumStats () {
    this.initiator.initHandlers ();
    this.initiator.init ();
  }

  private class Initiator {

    void initHandlers () {
      CerebellumStats.this.utilities = new Utilities ();
    }

    void init () {
      CerebellumStats.this.initComponents ();
      CerebellumStats.this.updater = new UpdateStatsTable ();
      CerebellumStats.this.utilities.startStatsTableUpdater ();
    }
  }

  private class Utilities {

    void updateStatsTable () {
      ((DefaultTableModel) CerebellumStats.this.statsTable.getModel ()).setRowCount (0);

      Map<String, String> status = CerebellumStats.this.model.getRequestedDataStatsTable ();
      Iterator<String> it = status.keySet ().iterator ();
      int counter = 0;
      while (it.hasNext ()) {
        String key = it.next ();
        String val = status.get (key);
        Object[] rowData = new Object[]{new JLabel (key), new JLabel (val)};
        // Insert row.
        ((DefaultTableModel) CerebellumStats.this.statsTable.getModel ()).insertRow (counter, rowData);
        counter++;
      }
    }

    void startStatsTableUpdater () {
      try {
        CerebellumStats.this.updater.start ();
      }
      catch (Exception e) {
        LOG.error ("Error starting table updater thread. Error: " + e.toString (), e);
      }

      if (LOG.isInfoEnabled ()) {
        LOG.info ("Table updater started.");
      }
    }

    void stopStatsTableUpdater () {
      try {
        CerebellumStats.this.updater.stop ();
      }
      catch (Exception e) {
        LOG.error ("Error stopping table updater thread. Error: " + e.toString (), e);
      }

      if (LOG.isInfoEnabled ()) {
        LOG.info ("Table updater stopped.");
      }
    }

    void exit () {
      CerebellumStats.this.utilities.stopStatsTableUpdater (); // Stop timers.
      CerebellumStats.this.dispose (); // Dispose window.
    }
  }

  protected static void build () {
    if (CerebellumStats.thisFrame != null) {
      if (!CerebellumStats.thisFrame.isVisible ()) {
        CerebellumStats.thisFrame.setVisible (true);
        CerebellumStats.thisFrame.utilities.startStatsTableUpdater (); // Start updaters.
      }
      else {
        CerebellumStats.thisFrame.toFront (); // Bring opened one to front.
      }
    }
    else { // Create a new window.
      java.awt.EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
          CerebellumStats.thisFrame = new CerebellumStats ();
          CerebellumStats.thisFrame.setLocationRelativeTo (Main.thisFrame);
          CerebellumStats.thisFrame.setVisible (true);
          // Override the default frame close method.
          CerebellumStats.thisFrame.addWindowListener (new WindowAdapter () {
            @Override
            public void windowClosing (WindowEvent e) {
              CerebellumStats.thisFrame.utilities.exit ();
            }
          });
        }
      });
    }
  }

  private class UpdateStatsTable extends Timer implements ActionListener {

    private UpdateStatsTable () {
      super (CerebellumStats.UPDATE_INTERVAL, null);
      super.addActionListener (this);
    }

    @Override
    public void actionPerformed (ActionEvent event) {
      CerebellumStats.this.utilities.updateStatsTable ();
    }
  }

  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    requestedDataStatsPanel = new javax.swing.JPanel();
    statsScrollPane = new javax.swing.JScrollPane();
    statsTable = new javax.swing.JTable();

    setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
    setTitle("Cerebellum Stats Window");
    setResizable(false);
    getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

    requestedDataStatsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(io.aime.util.LookFeel.DEFAULT_BORDER, "Stats", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new Font(io.aime.util.LookFeel.getFontBold(),Font.BOLD,io.aime.util.LookFeel.getDefaultFontSize(1))));
    requestedDataStatsPanel.setPreferredSize(new java.awt.Dimension(300, 140));
    requestedDataStatsPanel.setLayout(new javax.swing.BoxLayout(requestedDataStatsPanel, javax.swing.BoxLayout.LINE_AXIS));

    statsTable.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {

      },
      new String [] {
        "Data Requested", "Count"
      }
    ) {
      boolean[] canEdit = new boolean [] {
        false, false
      };

      public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
      }
    });
    statsScrollPane.setViewportView(statsTable);
    statsTable.getColumnModel().getColumn(0).setCellRenderer(new CustomTableRenderer().getCustomRenderer(null,true));
    statsTable.getColumnModel().getColumn(1).setCellRenderer(new CustomTableRenderer().getCustomRenderer(null,true));

    requestedDataStatsPanel.add(statsScrollPane);

    getContentPane().add(requestedDataStatsPanel);

    pack();
  }// </editor-fold>//GEN-END:initComponents
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JPanel requestedDataStatsPanel;
  private javax.swing.JScrollPane statsScrollPane;
  private javax.swing.JTable statsTable;
  // End of variables declaration//GEN-END:variables
}
